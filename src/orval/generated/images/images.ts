/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * StockPhoto API Documents
 * StockPhoto API „Éâ„Ç≠„É•„É°„É≥„Éà
 * OpenAPI spec version: 1.0
 */
import { useMutation } from '@tanstack/react-query'
import type {
  MutationFunction,
  UseMutationOptions,
} from '@tanstack/react-query'
import axios from 'axios'
import type { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios'
import type { EchoHTTPError } from '../model/echoHTTPError'
import type { PostApiImagesUploadBody } from '../model/postApiImagesUploadBody'

/**
 * „É™„ÇØ„Ç®„Çπ„Éà„Åï„Çå„ÅüÁîªÂÉè„ÇíGCS„Å´„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ„Åô„Çã
 * @summary ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ
 */
export const postApiImagesUpload = (
  postApiImagesUploadBody: PostApiImagesUploadBody,
  options?: AxiosRequestConfig,
): Promise<AxiosResponse<void>> => {
  const formData = new FormData()
  formData.append('file', postApiImagesUploadBody.file)

  return axios.post(`/api/images/upload`, formData, options)
}

export const getPostApiImagesUploadMutationOptions = <
  TError = AxiosError<EchoHTTPError>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postApiImagesUpload>>,
    TError,
    { data: PostApiImagesUploadBody },
    TContext
  >
  axios?: AxiosRequestConfig
}): UseMutationOptions<
  Awaited<ReturnType<typeof postApiImagesUpload>>,
  TError,
  { data: PostApiImagesUploadBody },
  TContext
> => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {}

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postApiImagesUpload>>,
    { data: PostApiImagesUploadBody }
  > = (props) => {
    const { data } = props ?? {}

    return postApiImagesUpload(data, axiosOptions)
  }

  return { mutationFn, ...mutationOptions }
}

export type PostApiImagesUploadMutationResult = NonNullable<
  Awaited<ReturnType<typeof postApiImagesUpload>>
>
export type PostApiImagesUploadMutationBody = PostApiImagesUploadBody
export type PostApiImagesUploadMutationError = AxiosError<EchoHTTPError>

/**
 * @summary ÁîªÂÉè„Ç¢„ÉÉ„Éó„É≠„Éº„Éâ
 */
export const usePostApiImagesUpload = <
  TError = AxiosError<EchoHTTPError>,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postApiImagesUpload>>,
    TError,
    { data: PostApiImagesUploadBody },
    TContext
  >
  axios?: AxiosRequestConfig
}) => {
  const mutationOptions = getPostApiImagesUploadMutationOptions(options)

  return useMutation(mutationOptions)
}
